{"version":3,"file":"js/138.7bc68c3b.js","mappings":"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","sources":["webpack://vuejs-spa/./src/components/containers/contextMenu/contextMenu.vue","webpack://vuejs-spa/./src/components/containers/contextMenu/contextMenu.vue?b26b","webpack://vuejs-spa/./src/views/UploadView.vue","webpack://vuejs-spa/./src/views/UploadView.vue?6d82"],"sourcesContent":["<template>\r\n<div class=\"context-menu\" v-bind:class=\"{'context-active': this.active}\">\r\n  <div class=\"context-header\" ref=\"header\" v-on:click=\"this.active=!this.active\">\r\n    <slot name=\"header\"></slot>\r\n  </div>\r\n  <ul class=\"context-options\">\r\n    <slot name=\"options\"></slot>\r\n  </ul>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default\r\n{\r\n  name: 'contextMenu',\r\n  data()\r\n  {\r\n    return {\r\n      active:false\r\n    }\r\n  },\r\n  mounted()\r\n  {\r\n    document.addEventListener('click', this.close);\r\n  },\r\n  beforeUnmount()\r\n  {\r\n    document.removeEventListener('click', this.close);\r\n  },\r\n  methods:\r\n  {\r\n    close(e)\r\n    {\r\n      if (!this.$refs.header.contains(e.target)) this.active=false;\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.context-menu\r\n{\r\n  border-radius:3px;\r\n  background-color: var(--soft-white);\r\n  overflow:hidden;\r\n  box-shadow: 0 0 15px 1px rgba(0,0,0,.2);\r\n}\r\n\r\n.context-menu:not(.context-active) { opacity:0.0; }\r\n\r\ndiv:hover > .context-menu:not(.context-active) { opacity:0.7; }\r\n\r\ndiv:hover > .context-menu:hover { opacity:1.0; }\r\n\r\n.context-menu .context-options\r\n{\r\n  display:none;\r\n  flex-direction: column;\r\n  width:100%;\r\n}\r\n\r\n.context-menu.context-active .context-options { display:flex; }\r\n\r\n</style>","import { render } from \"./contextMenu.vue?vue&type=template&id=2ecf1708&scoped=true\"\nimport script from \"./contextMenu.vue?vue&type=script&lang=js\"\nexport * from \"./contextMenu.vue?vue&type=script&lang=js\"\n\nimport \"./contextMenu.vue?vue&type=style&index=0&id=2ecf1708&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2ecf1708\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"content x-center\">\r\n        <div class=\"xy-center-absolute\" v-if=!this.songs.length>\r\n            <div class=\"drag-and-drop\" v-bind:class=\"{'dragging':this.dragging}\"\r\n                v-on:dragenter=\"dragenter\"\r\n                v-on:dragover=\"dragover\"\r\n                v-on:dragleave=\"dragleave\"\r\n                v-on:drop=\"drop\"\r\n            >\r\n                <span class=\"primary-text font-size-large\">Drag and drop your songs here</span>\r\n                <button type=\"button\" class=\"button button-primary hoverable\" v-on:click=\"this.$refs.songsInput.click()\">or choose files to upload</button>\r\n                <input type=\"file\" ref=\"songsInput\" style=\"display:none\" v-on:change=\"fileInputChange\" accept=\".mp3\" multiple/>\r\n                <div class=\"form-checkbox\" style=\"width:min-content\">\r\n                    <button class=\"button button-checkbox\" id=\"checkbox_makePlaylist\" v-on:click=\"this.makePlaylist=!this.makePlaylist\"\r\n                        v-bind:class=\"{'bi bi-check-square': !this.makePlaylist, 'bi bi-check-square-fill toggled': this.makePlaylist }\">\r\n                    </button>\r\n                    <label for=\"checkbox_makePlaylist\">Make a playlist when multiple files are selected</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <form class=\"column column-main\" @submit.prevent=\"submitLoadSongs\" v-else>\r\n            <panel v-for=\"(song,songIndex) in this.songs\">\r\n                <template v-slot:header>Upload song</template>\r\n                <template v-slot:menu>\r\n                    <button type=\"button\" class=\"button button-secondary\" v-on:click=\"openSongAudioFileInput(songIndex)\">Replace file</button>\r\n                    <input type=\"file\" :ref=\"'songAudioInput'\" style=\"display:none\" v-on:change=\"uploadSongAudioFile($event,songIndex)\" accept=\".mp3\" />\r\n                    <button type=\"button\" class=\"button button-default button-small bi bi-x-lg\" v-on:click=\"this.songs.splice(songIndex,1)\"></button>\r\n                </template>\r\n                <template v-slot:content>\r\n                    <div class=\"column gap-10\">\r\n                        <div class=\"row gap-20\">\r\n                            <div class=\"cover-wrapper s200x200\">\r\n                                <img id=\"songCover\" class=\"cover\" :src=\"song.cover.url\" v-if=\"song.cover\">\r\n                                <div class=\"cover bi bi-music-note\" v-else></div>\r\n                                <contextMenu class=\"x-center-absolute\" style=\"top:50%; min-width:120px;\">\r\n                                    <template v-slot:header>\r\n                                        <button type = \"button\" class=\"button\">\r\n                                            <span class=\"icon-text\">\r\n                                                <span class=\"bi bi-camera-fill\"></span><span>Update cover</span>\r\n                                            </span>\r\n                                        </button>\r\n                                    </template>\r\n                                    <template v-slot:options>\r\n                                        <li>\r\n                                            <button type = \"button\" class=\"button\" v-on:click=\"openSongCoverFileInput(songIndex)\">Upload image</button>\r\n                                            <input type=\"file\" :ref=\"'songCoverInput'\" style=\"display:none\" v-on:change=\"uploadSongCoverFile($event,songIndex)\" accept=\"image/*\" />\r\n                                        </li>\r\n                                        <li>\r\n                                            <button type = \"button\" class=\"button\" v-on:click=\"song.cover=null\">Delete image</button>\r\n                                        </li>\r\n                                    </template>\r\n                                </contextMenu>\r\n                            </div>\r\n                            <div class=\"column gap-10 w-100\">\r\n                                <div class=\"form-field\">\r\n                                    <label for=\"input_songName\">Name</label>\r\n                                    <input id=\"input_songName\" type=\"text\" v-bind:class=\"{'input-error': false}\" placeholder=\"Enter song name\"\r\n                                        v-model=\"song.name.data\"\r\n                                    />\r\n                                    <span class=\"icon-text notification-error\" v-if=song.name.error>\r\n                                        <span class=\"bi bi-exclamation-circle-fill\"></span><span>{{song.name.error}}</span>\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-field\">\r\n                                    <label for=\"input_songTags\">Tags</label>\r\n                                    <input id=\"input_songTags\" type=\"text\" v-bind:class=\"{'input-error': false}\" placeholder=\"Up to 5 space-separated tags\"\r\n                                        v-model=\"song.tags.data\"\r\n                                    />\r\n                                    <span class=\"icon-text notification-error\" v-if=song.tags.error>\r\n                                        <span class=\"bi bi-exclamation-circle-fill\"></span><span>{{song.tags.error}}</span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"column gap-5\">\r\n                            <span class=\"primary-text font-size-medium\">Artists</span>\r\n                            <div class=\"column gap-15\">\r\n                                <div class=\"row gap-10\" v-for=\"(artist,artistIndex) in song.artists\">\r\n                                    <div class=\"form-field\">\r\n                                        <input type=\"text\" placeholder=\"Login\"\r\n                                            v-model=\"artist.login.data\"\r\n                                        />\r\n                                        <span class=\"icon-text notification-error\" v-if=artist.login.error>\r\n                                            <span class=\"bi bi-exclamation-circle-fill\"></span><span>{{ artist.login.error }}</span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"form-field\">\r\n                                        <input type=\"text\" placeholder=\"Pseudoname\"\r\n                                            v-model=\"artist.pseudoname.data\"\r\n                                        />\r\n                                        <span class=\"icon-text notification-error\" v-if=artist.pseudoname.error>\r\n                                            <span class=\"bi bi-exclamation-circle-fill\"></span><span>{{ artist.pseudoname.error }}</span>\r\n                                        </span>\r\n                                    </div>\r\n                                    <button type=\"button\" class=\"button form-button bi bi-trash3-fill\" v-on:click=\"song.artists.splice(artistIndex,1)\"></button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <button type=\"button\" class=\"button button-secondary\" :disabled='song.artists.length>=10'\r\n                                    v-on:click=\"song.artists.push({login: { data:null, error:null }, pseudoname: { data:null, error:null }})\">\r\n                                    Add artist\r\n                                </button>\r\n                                <span class=\"icon-text notification-error\" v-if=\"song.artists.length>=10\">\r\n                                    <span class=\"bi bi-exclamation-circle-fill\"></span><span>A maximum of 10 artists can be added to song.</span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </panel>\r\n            <div class=\"row right\">\r\n                <button type=\"button\" class=\"button button-secondary\" v-on:click=\"this.songs=[]\">Cancel</button>\r\n                <button type=\"submit\" class=\"button button-primary hoverable\">Upload</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport API from '@/axios/API';\r\n\r\nimport panel from '@/components/containers/panel.vue';\r\nimport contextMenu from '@/components/containers/contextMenu/contextMenu.vue';\r\n\r\nexport default\r\n{\r\n    name: 'UploadView',\r\n    components: { panel,contextMenu },\r\n    data()\r\n    {\r\n        return {\r\n            validImageTypes: ['image/gif', 'image/jpeg', 'image/png'],\r\n            validAudioTypes: ['audio/mpeg'],\r\n            makePlaylist:false,\r\n            songs: [],\r\n            dragging: false,\r\n            dragTime: undefined\r\n        }\r\n    },\r\n    methods:\r\n    {\r\n        dragenter(event)\r\n        {\r\n            const dt = event.dataTransfer;\r\n            if (dt?.types.indexOf ? dt?.types.indexOf('Files') != -1 : dt?.types?.contains('Files'))\r\n            this.dragging=true;\r\n            this.dragTime=Date.now();\r\n        },\r\n        dragover(event)\r\n        {\r\n            event.preventDefault();\r\n\r\n        },\r\n        dragleave(event)\r\n        {\r\n            if (Date.now()-this.dragTime>25)\r\n            {\r\n                this.dragging=false;\r\n                this.dragTime=undefined;\r\n            }\r\n        },\r\n        drop(event)\r\n        {\r\n            event.preventDefault();\r\n            this.dragging=false;\r\n            this.dragTime=undefined;\r\n            this.uploadSongs(event.dataTransfer.files);\r\n        },\r\n        fileInputChange(event)\r\n        {\r\n            this.uploadSongs(event.target.files);\r\n        },\r\n        uploadSongs(selectedFiles)\r\n        {\r\n            this.songs=[];\r\n            for (let i = 0;i<selectedFiles.length;i++)\r\n            {\r\n                if (!this.validAudioTypes.includes(selectedFiles[i].type)) continue;\r\n                this.songs.push(\r\n                {\r\n                    name: { data: selectedFiles[i].name.split('.').slice(0, -1).join('.'), error:null },\r\n                    tags: { data: \"\", error:null },\r\n                    artists: [],\r\n                    cover: null,\r\n                    audio: selectedFiles[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        openSongAudioFileInput(index)\r\n        {\r\n            this.$refs.songAudioInput[index].click();\r\n        },\r\n        uploadSongAudioFile(event,index)\r\n        {\r\n            const selectedFile = event.target.files[0];\r\n            if (!selectedFile || !this.validAudioTypes.includes(selectedFile.type)) return;\r\n\r\n            this.songs[index].audio = selectedFile;\r\n        },\r\n\r\n        openSongCoverFileInput(index)\r\n        {\r\n            this.$refs.songCoverInput[index].click();\r\n        },\r\n        uploadSongCoverFile(event,index)\r\n        {\r\n            const selectedFile = event.target.files[0];\r\n            if (!selectedFile || !this.validImageTypes.includes(selectedFile.type)) return;\r\n\r\n            this.songs[index].cover = { url: URL.createObjectURL(selectedFile), file: selectedFile};\r\n        },\r\n        async submitLoadSongs()\r\n        {\r\n            const uploadSongPromises = this.songs.map\r\n            (\r\n                async (song) =>\r\n                {\r\n                    song.name.data = song.name.data || null;\r\n                    song.name.error = null;\r\n                    if (song.name.data)\r\n                    {\r\n                        song.name.data = song.name.data.trim();\r\n                        if (song.name.data.length>120) song.name.error='Enter a song name that is up to 120 characters.';\r\n                    }\r\n                    else song.name.error=\"Enter a song name.\";\r\n\r\n                    song.tags.data = song.tags.data || null;\r\n                    song.tags.error = null;\r\n\r\n                    let tagsArray = [];\r\n                    if (song.tags.data)\r\n                    {\r\n                        song.tags.data = [...new Set(song.tags.data.trim().toLowerCase().replace('#','').replace(/\\s+/g, ' ').split(' '))].join(' ');\r\n                        tagsArray = song.tags.data.split(' ');\r\n                        if (tagsArray.length>5) song.tags.error='Maximum 5 tags.';\r\n                        tagsArray.forEach((tag) =>\r\n                        {\r\n                            if (tag.length>15) song.tags.error='One of tags is more than 15 characters.';\r\n                        });\r\n                    }\r\n                    song.artists.forEach((artist) =>\r\n                    {\r\n                        artist.login.data = artist.login.data || null;\r\n                        artist.login.error = null;\r\n                        if (artist.login.data)\r\n                        {\r\n                            artist.login.data = artist.login.data.trim().toLowerCase();\r\n                        }\r\n\r\n                        artist.pseudoname.data = artist.pseudoname.data || null;\r\n                        artist.pseudoname.error = null;\r\n                        if (artist.pseudoname.data)\r\n                        {\r\n                            artist.pseudoname.data = artist.pseudoname.data.trim();\r\n                            if (artist.pseudoname.data.length>50) artist.pseudoname.error='Enter a pseudoname that is up to 50 characters.';\r\n                        }\r\n                        if (!artist.login.data && !artist.pseudoname.data)\r\n                        {\r\n                            artist.login.error=\"Enter an artist username/pseudoname.\";\r\n                        }\r\n                    });\r\n\r\n                    const artistsError = song.artists.some(artist =>{ return artist.login.error || artist.pseudoname.error });\r\n\r\n                    if (song.name.error || song.tags.error || artistsError || song.artists.length>10 ) return;\r\n\r\n                    const fd = new FormData();\r\n\r\n                    if (song.cover) fd.append('songCover',song.cover.file);\r\n                    fd.append('songAudio',song.audio);\r\n                    const songJSON = JSON.stringify({\r\n                        name: song.name.data,\r\n                        tags: tagsArray,\r\n                        artists: song.artists.map((artist) => { return { login: artist.login.data, pseudoname: artist.pseudoname.data }})\r\n                    });\r\n                    fd.append('songJSON',songJSON);\r\n\r\n                    const r = await API.post('me/songs/created', fd);\r\n                    if (r.error)\r\n                    {\r\n                        if (r.error.message.artistsError)\r\n                        {\r\n                            r.error.message.artistsError.forEach(artistError =>\r\n                            {\r\n                                song.artists[artistError.index].login.error =  artistError.message;\r\n                            });\r\n                        }\r\n                    }\r\n                    else song.uploaded=true;\r\n                }\r\n            );\r\n            await Promise.all(uploadSongPromises);\r\n            this.songs = this.songs.filter(song => { return !song.uploaded });\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.drag-and-drop\r\n{\r\n    display:flex;\r\n    flex-direction:column;\r\n    padding:20px;\r\n    border: 2px dashed var(--accent-color);\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap:20px;\r\n    height:400px;\r\n    width:810px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.drag-and-drop.dragging\r\n{\r\n    border: 2px solid var(--accent-color);\r\n    background-color: var(--panel-background-color);\r\n}\r\n\r\n</style>\r\n\r\n","import { render } from \"./UploadView.vue?vue&type=template&id=cb68e724&scoped=true\"\nimport script from \"./UploadView.vue?vue&type=script&lang=js\"\nexport * from \"./UploadView.vue?vue&type=script&lang=js\"\n\nimport \"./UploadView.vue?vue&type=style&index=0&id=cb68e724&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cb68e724\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_normalizeClass","active","_createElementVNode","ref","onClick","_cache","$event","_renderSlot","_ctx","$slots","undefined","_hoisted_1","name","data","mounted","document","addEventListener","this","close","beforeUnmount","removeEventListener","methods","e","$refs","header","contains","target","__exports__","render","style","for","type","_hoisted_46","_hoisted_47","songs","length","onSubmit","_withModifiers","args","$options","submitLoadSongs","_Fragment","_renderList","song","songIndex","_createBlock","_component_panel","_withCtx","menu","openSongAudioFileInput","_hoisted_6","onChange","uploadSongAudioFile","accept","splice","content","_hoisted_9","_hoisted_10","_hoisted_11","cover","id","src","url","_hoisted_13","_createVNode","_component_contextMenu","_hoisted_14","options","openSongCoverFileInput","_hoisted_15","uploadSongCoverFile","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","placeholder","error","_hoisted_22","_hoisted_23","_toDisplayString","_hoisted_24","_hoisted_25","tags","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","artists","artist","artistIndex","_hoisted_33","_hoisted_34","login","_hoisted_36","_hoisted_37","_hoisted_38","pseudoname","_hoisted_40","_hoisted_41","_hoisted_43","disabled","push","_hoisted_44","_hoisted_45","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_2","dragging","onDragenter","dragenter","onDragover","dragover","onDragleave","dragleave","onDrop","drop","_hoisted_3","songsInput","click","fileInputChange","multiple","_hoisted_4","makePlaylist","_hoisted_5","components","panel","contextMenu","validImageTypes","validAudioTypes","dragTime","event","dt","dataTransfer","types","indexOf","Date","now","preventDefault","uploadSongs","files","selectedFiles","i","includes","split","slice","join","audio","index","songAudioInput","selectedFile","songCoverInput","URL","createObjectURL","file","uploadSongPromises","map","async","trim","tagsArray","Set","toLowerCase","replace","forEach","tag","artistsError","some","fd","FormData","append","songJSON","JSON","stringify","r","API","post","message","artistError","uploaded","Promise","all","filter"],"sourceRoot":""}